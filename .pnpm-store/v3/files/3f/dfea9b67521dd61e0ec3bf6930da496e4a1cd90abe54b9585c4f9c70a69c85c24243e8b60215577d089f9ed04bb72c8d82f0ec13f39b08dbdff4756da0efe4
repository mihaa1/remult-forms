"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.DataApi = void 0;
exports.determineSort = determineSort;
exports.serializeError = serializeError;
var tslib_1 = require("tslib");
var context_js_1 = require("./context.js");
var data_interfaces_js_1 = require("./data-interfaces.js");
var rest_data_provider_js_1 = require("./data-providers/rest-data-provider.js");
var filter_interfaces_js_1 = require("./filter/filter-interfaces.js");
var relationInfoMember_js_1 = require("./remult3/relationInfoMember.js");
var remult3_js_1 = require("./remult3/remult3.js");
var server_action_js_1 = require("./server-action.js");
var DataApi = /** @class */ (function () {
    function DataApi(repository, remult) {
        this.repository = repository;
        this.remult = remult;
    }
    DataApi.prototype.httpGet = function (res, req, serializeContext) {
        try {
            var action = req === null || req === void 0 ? void 0 : req.get('__action');
            if (action === null || action === void 0 ? void 0 : action.startsWith(rest_data_provider_js_1.liveQueryAction))
                return this.liveQuery(res, req, undefined, serializeContext, action.substring(rest_data_provider_js_1.liveQueryAction.length));
            switch (action) {
                case 'get':
                case 'count':
                    return this.count(res, req, undefined);
                case 'groupBy':
                    return res.success(this.groupBy(req, undefined));
            }
            return this.getArray(res, req, undefined);
        }
        catch (err) {
            if (err.isForbiddenError)
                res.forbidden(err);
            else
                res.error(err, this.repository.metadata);
        }
    };
    DataApi.prototype.httpPost = function (res, req, body, serializeContext) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            function validateWhereInBody() {
                if (!(body === null || body === void 0 ? void 0 : body.where)) {
                    throw {
                        message: "POST with action ".concat(action, " must have a where clause in the body"),
                        httpStatusCode: 400,
                    };
                }
            }
            var action, _a, _b, _c, _d, _e, _f, _g, err_1;
            return tslib_1.__generator(this, function (_h) {
                switch (_h.label) {
                    case 0:
                        action = req === null || req === void 0 ? void 0 : req.get('__action');
                        _h.label = 1;
                    case 1:
                        _h.trys.push([1, 16, , 17]);
                        if (action === null || action === void 0 ? void 0 : action.startsWith(rest_data_provider_js_1.liveQueryAction)) {
                            validateWhereInBody();
                            return [2 /*return*/, this.liveQuery(res, req, body, serializeContext, action.substring(rest_data_provider_js_1.liveQueryAction.length))];
                        }
                        _a = action;
                        switch (_a) {
                            case 'get': return [3 /*break*/, 2];
                            case 'count': return [3 /*break*/, 3];
                            case 'groupBy': return [3 /*break*/, 4];
                            case 'deleteMany': return [3 /*break*/, 6];
                            case 'updateMany': return [3 /*break*/, 7];
                            case 'upsertMany': return [3 /*break*/, 8];
                            case 'endLiveQuery': return [3 /*break*/, 9];
                            case 'query': return [3 /*break*/, 11];
                        }
                        return [3 /*break*/, 13];
                    case 2:
                        validateWhereInBody();
                        return [2 /*return*/, this.getArray(res, req, body)];
                    case 3:
                        validateWhereInBody();
                        return [2 /*return*/, this.count(res, req, body)];
                    case 4:
                        _c = (_b = res).success;
                        return [4 /*yield*/, this.groupBy(req, body)];
                    case 5: return [2 /*return*/, _c.apply(_b, [_h.sent()])];
                    case 6:
                        validateWhereInBody();
                        return [2 /*return*/, this.deleteMany(res, req, body)];
                    case 7:
                        validateWhereInBody();
                        return [2 /*return*/, this.updateManyImplementation(res, req, body)];
                    case 8: return [2 /*return*/, this.upsertMany(res, req, body)];
                    case 9: return [4 /*yield*/, this.remult.liveQueryStorage.remove(body.id)];
                    case 10:
                        _h.sent();
                        res.success('ok');
                        return [2 /*return*/];
                    case 11:
                        _e = (_d = res).success;
                        return [4 /*yield*/, this.query(res, req, body)];
                    case 12: return [2 /*return*/, _e.apply(_d, [_h.sent()])];
                    case 13:
                        _g = (_f = res).created;
                        return [4 /*yield*/, this.post(body)];
                    case 14: return [2 /*return*/, _g.apply(_f, [_h.sent()])];
                    case 15: return [3 /*break*/, 17];
                    case 16:
                        err_1 = _h.sent();
                        if (err_1.isForbiddenError)
                            res.forbidden(err_1.message);
                        else
                            res.error(err_1, this.repository.metadata);
                        return [3 /*break*/, 17];
                    case 17: return [2 /*return*/];
                }
            });
        });
    };
    DataApi.prototype.upsertMany = function (response, request, body) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var _this = this;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, (0, context_js_1.doTransaction)(this.remult, function () { return tslib_1.__awaiter(_this, void 0, void 0, function () {
                            var result, body_1, body_1_1, item, where, r, _a, _b, _c, _d, e_1_1;
                            var e_1, _e;
                            return tslib_1.__generator(this, function (_f) {
                                switch (_f.label) {
                                    case 0:
                                        result = [];
                                        _f.label = 1;
                                    case 1:
                                        _f.trys.push([1, 11, 12, 13]);
                                        body_1 = tslib_1.__values(body), body_1_1 = body_1.next();
                                        _f.label = 2;
                                    case 2:
                                        if (!!body_1_1.done) return [3 /*break*/, 10];
                                        item = body_1_1.value;
                                        return [4 /*yield*/, this.buildWhere(request, { where: item.where })];
                                    case 3:
                                        where = _f.sent();
                                        filter_interfaces_js_1.Filter.throwErrorIfFilterIsEmpty(where, 'upsert');
                                        return [4 /*yield*/, this.repository.find({
                                                where: where,
                                                include: this.includeNone(),
                                            })];
                                    case 4:
                                        r = _f.sent();
                                        if (!(r.length == 0)) return [3 /*break*/, 6];
                                        _b = (_a = result).push;
                                        return [4 /*yield*/, this.post(tslib_1.__assign(tslib_1.__assign({}, item.where), item.set))];
                                    case 5:
                                        _b.apply(_a, [_f.sent()]);
                                        return [3 /*break*/, 9];
                                    case 6:
                                        if (!(item.set !== undefined)) return [3 /*break*/, 8];
                                        _d = (_c = result).push;
                                        return [4 /*yield*/, this.actualUpdate(r[0], item.set)];
                                    case 7:
                                        _d.apply(_c, [(_f.sent()).toApiJson()]);
                                        return [3 /*break*/, 9];
                                    case 8:
                                        result.push(this.repository.getEntityRef(r[0]).toApiJson());
                                        _f.label = 9;
                                    case 9:
                                        body_1_1 = body_1.next();
                                        return [3 /*break*/, 2];
                                    case 10: return [3 /*break*/, 13];
                                    case 11:
                                        e_1_1 = _f.sent();
                                        e_1 = { error: e_1_1 };
                                        return [3 /*break*/, 13];
                                    case 12:
                                        try {
                                            if (body_1_1 && !body_1_1.done && (_e = body_1.return)) _e.call(body_1);
                                        }
                                        finally { if (e_1) throw e_1.error; }
                                        return [7 /*endfinally*/];
                                    case 13:
                                        response.success(result);
                                        return [2 /*return*/];
                                }
                            });
                        }); })];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    DataApi.prototype.query = function (response, request, body) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var aggregate, rest, _a, r, _b, aggregates, err_2;
            return tslib_1.__generator(this, function (_c) {
                switch (_c.label) {
                    case 0:
                        if (!this.repository.metadata.apiReadAllowed) {
                            response.forbidden();
                            return [2 /*return*/];
                        }
                        _c.label = 1;
                    case 1:
                        _c.trys.push([1, 3, , 4]);
                        aggregate = body.aggregate, rest = tslib_1.__rest(body, ["aggregate"]);
                        return [4 /*yield*/, Promise.all([
                                this.getArrayImpl(request, rest),
                                this.groupBy(request, tslib_1.__assign(tslib_1.__assign({}, aggregate), { where: body.where })),
                            ])];
                    case 2:
                        _a = tslib_1.__read.apply(void 0, [_c.sent(), 2]), r = _a[0].r, _b = tslib_1.__read(_a[1], 1), aggregates = _b[0];
                        return [2 /*return*/, {
                                items: r,
                                aggregates: aggregates,
                            }];
                    case 3:
                        err_2 = _c.sent();
                        if (err_2.isForbiddenError)
                            response.forbidden();
                        else
                            response.error(err_2, this.repository.metadata);
                        return [3 /*break*/, 4];
                    case 4: return [2 /*return*/];
                }
            });
        });
    };
    DataApi.prototype.get = function (response, id) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var _this = this;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (!this.repository.metadata.apiReadAllowed) {
                            response.forbidden();
                            return [2 /*return*/];
                        }
                        return [4 /*yield*/, this.doOnId(response, id, function (row) { return tslib_1.__awaiter(_this, void 0, void 0, function () { return tslib_1.__generator(this, function (_a) {
                                return [2 /*return*/, response.success(this.repository.getEntityRef(row).toApiJson())];
                            }); }); })];
                    case 1:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    DataApi.prototype.count = function (response, request, body) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var _a, _b, _c, _d, err_3;
            var _e;
            return tslib_1.__generator(this, function (_f) {
                switch (_f.label) {
                    case 0:
                        if (!this.repository.metadata.apiReadAllowed) {
                            response.forbidden();
                            return [2 /*return*/];
                        }
                        _f.label = 1;
                    case 1:
                        _f.trys.push([1, 4, , 5]);
                        _b = (_a = response).success;
                        _e = {};
                        _d = (_c = this.repository).count;
                        return [4 /*yield*/, this.buildWhere(request, body)];
                    case 2: return [4 /*yield*/, _d.apply(_c, [_f.sent()])];
                    case 3:
                        _b.apply(_a, [(_e.count = +(_f.sent()),
                                _e)]);
                        return [3 /*break*/, 5];
                    case 4:
                        err_3 = _f.sent();
                        response.error(err_3, this.repository.metadata);
                        return [3 /*break*/, 5];
                    case 5: return [2 /*return*/];
                }
            });
        });
    };
    DataApi.prototype.deleteMany = function (response, request, body) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var deleted_1, where_1, err_4;
            var _this = this;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        _a.trys.push([0, 3, , 4]);
                        deleted_1 = 0;
                        return [4 /*yield*/, this.buildWhere(request, body)];
                    case 1:
                        where_1 = _a.sent();
                        filter_interfaces_js_1.Filter.throwErrorIfFilterIsEmpty(where_1, 'deleteMany');
                        return [4 /*yield*/, (0, context_js_1.doTransaction)(this.remult, function () { return tslib_1.__awaiter(_this, void 0, void 0, function () {
                                var _a, _b, _c, x, e_2_1;
                                var _d, e_2, _e, _f;
                                return tslib_1.__generator(this, function (_g) {
                                    switch (_g.label) {
                                        case 0:
                                            _g.trys.push([0, 6, 7, 12]);
                                            _a = true, _b = tslib_1.__asyncValues(this.repository.query({
                                                where: where_1,
                                                include: this.includeNone(),
                                                aggregate: undefined,
                                            }));
                                            _g.label = 1;
                                        case 1: return [4 /*yield*/, _b.next()];
                                        case 2:
                                            if (!(_c = _g.sent(), _d = _c.done, !_d)) return [3 /*break*/, 5];
                                            _f = _c.value;
                                            _a = false;
                                            x = _f;
                                            return [4 /*yield*/, this.actualDelete(x)];
                                        case 3:
                                            _g.sent();
                                            deleted_1++;
                                            _g.label = 4;
                                        case 4:
                                            _a = true;
                                            return [3 /*break*/, 1];
                                        case 5: return [3 /*break*/, 12];
                                        case 6:
                                            e_2_1 = _g.sent();
                                            e_2 = { error: e_2_1 };
                                            return [3 /*break*/, 12];
                                        case 7:
                                            _g.trys.push([7, , 10, 11]);
                                            if (!(!_a && !_d && (_e = _b.return))) return [3 /*break*/, 9];
                                            return [4 /*yield*/, _e.call(_b)];
                                        case 8:
                                            _g.sent();
                                            _g.label = 9;
                                        case 9: return [3 /*break*/, 11];
                                        case 10:
                                            if (e_2) throw e_2.error;
                                            return [7 /*endfinally*/];
                                        case 11: return [7 /*endfinally*/];
                                        case 12:
                                            response.success({ deleted: deleted_1 });
                                            return [2 /*return*/];
                                    }
                                });
                            }); })];
                    case 2: return [2 /*return*/, _a.sent()];
                    case 3:
                        err_4 = _a.sent();
                        response.error(err_4, this.repository.metadata);
                        return [3 /*break*/, 4];
                    case 4: return [2 /*return*/];
                }
            });
        });
    };
    DataApi.prototype.groupBy = function (request, body) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var findOptions, orderBy, _a, _b, element, direction, group, result;
            var e_3, _c, _d, _e;
            var _this = this;
            var _f, _g, _h, _j, _k, _l;
            return tslib_1.__generator(this, function (_m) {
                switch (_m.label) {
                    case 0: return [4 /*yield*/, this.findOptionsFromRequest(request, body)];
                    case 1:
                        findOptions = _m.sent();
                        orderBy = {};
                        if (body === null || body === void 0 ? void 0 : body.orderBy) {
                            try {
                                for (_a = tslib_1.__values(body === null || body === void 0 ? void 0 : body.orderBy), _b = _a.next(); !_b.done; _b = _a.next()) {
                                    element = _b.value;
                                    direction = element.isDescending ? 'desc' : 'asc';
                                    switch (element.operation) {
                                        case undefined:
                                            orderBy[element.field] = direction;
                                            break;
                                        case 'count':
                                            orderBy[remult3_js_1.GroupByCountMember] = direction;
                                            break;
                                        default:
                                            orderBy[element.field] = tslib_1.__assign(tslib_1.__assign({}, orderBy[element.field]), (_d = {}, _d[element.operation] = direction, _d));
                                            break;
                                    }
                                }
                            }
                            catch (e_3_1) { e_3 = { error: e_3_1 }; }
                            finally {
                                try {
                                    if (_b && !_b.done && (_c = _a.return)) _c.call(_a);
                                }
                                finally { if (e_3) throw e_3.error; }
                            }
                        }
                        group = (_f = body === null || body === void 0 ? void 0 : body.groupBy) === null || _f === void 0 ? void 0 : _f.filter(function (x) {
                            return _this.repository.fields.find(x).includedInApi();
                        });
                        return [4 /*yield*/, this.repository.groupBy((_e = {
                                    where: findOptions.where,
                                    limit: findOptions.limit,
                                    page: findOptions.page
                                },
                                //@ts-expect-error internal key
                                _e[remult3_js_1.GroupByForApiKey] = true,
                                _e.group = group,
                                _e.sum = (_g = body === null || body === void 0 ? void 0 : body.sum) === null || _g === void 0 ? void 0 : _g.filter(function (x) {
                                    return _this.repository.fields.find(x).includedInApi();
                                }),
                                _e.avg = (_h = body === null || body === void 0 ? void 0 : body.avg) === null || _h === void 0 ? void 0 : _h.filter(function (x) {
                                    return _this.repository.fields.find(x).includedInApi();
                                }),
                                _e.min = (_j = body === null || body === void 0 ? void 0 : body.min) === null || _j === void 0 ? void 0 : _j.filter(function (x) {
                                    return _this.repository.fields.find(x).includedInApi();
                                }),
                                _e.max = (_k = body === null || body === void 0 ? void 0 : body.max) === null || _k === void 0 ? void 0 : _k.filter(function (x) {
                                    return _this.repository.fields.find(x).includedInApi();
                                }),
                                _e.distinctCount = (_l = body === null || body === void 0 ? void 0 : body.distinctCount) === null || _l === void 0 ? void 0 : _l.filter(function (x) {
                                    return _this.repository.fields.find(x).includedInApi();
                                }),
                                _e.orderBy = orderBy,
                                _e))];
                    case 2:
                        result = _m.sent();
                        if (group)
                            result.forEach(function (x) {
                                var e_4, _a;
                                try {
                                    for (var group_1 = tslib_1.__values(group), group_1_1 = group_1.next(); !group_1_1.done; group_1_1 = group_1.next()) {
                                        var f = group_1_1.value;
                                        x[f] = _this.repository.fields.find(f).valueConverter.toJson(x[f]);
                                    }
                                }
                                catch (e_4_1) { e_4 = { error: e_4_1 }; }
                                finally {
                                    try {
                                        if (group_1_1 && !group_1_1.done && (_a = group_1.return)) _a.call(group_1);
                                    }
                                    finally { if (e_4) throw e_4.error; }
                                }
                            });
                        return [2 /*return*/, result];
                }
            });
        });
    };
    DataApi.prototype.getArrayImpl = function (request, body) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var findOptions, r;
            var _this = this;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.findOptionsFromRequest(request, body)];
                    case 1:
                        findOptions = _a.sent();
                        return [4 /*yield*/, this.repository.find(findOptions).then(function (r) { return tslib_1.__awaiter(_this, void 0, void 0, function () {
                                var _this = this;
                                return tslib_1.__generator(this, function (_a) {
                                    switch (_a.label) {
                                        case 0: return [4 /*yield*/, Promise.all(r.map(function (y) { return tslib_1.__awaiter(_this, void 0, void 0, function () { return tslib_1.__generator(this, function (_a) {
                                                return [2 /*return*/, this.repository.getEntityRef(y).toApiJson()];
                                            }); }); }))];
                                        case 1: return [2 /*return*/, _a.sent()];
                                    }
                                });
                            }); })];
                    case 2:
                        r = _a.sent();
                        return [2 /*return*/, { r: r, findOptions: findOptions }];
                }
            });
        });
    };
    DataApi.prototype.findOptionsFromRequest = function (request, body) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var findOptions, _a, sort, dir, limit, hasId_1, w;
            var _this = this;
            return tslib_1.__generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        findOptions = {
                            load: function () { return []; },
                            include: this.includeNone(),
                        };
                        _a = findOptions;
                        return [4 /*yield*/, this.buildWhere(request, body)];
                    case 1:
                        _a.where = _b.sent();
                        if (request) {
                            sort = request.get('_sort');
                            if (sort != undefined) {
                                dir = request.get('_order');
                                findOptions.orderBy = determineSort(sort, dir);
                            }
                            limit = +request.get('_limit');
                            if (!limit && DataApi.defaultGetLimit)
                                limit = DataApi.defaultGetLimit;
                            findOptions.limit = limit;
                            findOptions.page = +request.get('_page');
                        }
                        if (!this.remult.isAllowed(this.repository.metadata.options.apiRequireId)) return [3 /*break*/, 3];
                        hasId_1 = false;
                        return [4 /*yield*/, filter_interfaces_js_1.Filter.fromEntityFilter(this.repository.metadata, findOptions.where)];
                    case 2:
                        w = _b.sent();
                        if (w) {
                            w.__applyToConsumer({
                                containsCaseInsensitive: function () { },
                                notContainsCaseInsensitive: function () { },
                                startsWithCaseInsensitive: function () { },
                                endsWithCaseInsensitive: function () { },
                                isDifferentFrom: function () { },
                                isEqualTo: function (col, val) {
                                    if (_this.repository.metadata.idMetadata.isIdField(col))
                                        hasId_1 = true;
                                },
                                custom: function () { },
                                databaseCustom: function () { },
                                isGreaterOrEqualTo: function () { },
                                isGreaterThan: function () { },
                                isIn: function (col) {
                                    if (_this.repository.metadata.idMetadata.isIdField(col))
                                        hasId_1 = true;
                                },
                                isLessOrEqualTo: function () { },
                                isLessThan: function () { },
                                isNotNull: function () { },
                                isNull: function () { },
                                not: function () { },
                                or: function () { },
                            });
                        }
                        if (!hasId_1) {
                            throw new server_action_js_1.ForbiddenError();
                        }
                        _b.label = 3;
                    case 3: return [2 /*return*/, findOptions];
                }
            });
        });
    };
    DataApi.prototype.includeNone = function () {
        var e_5, _a;
        var include = {};
        try {
            for (var _b = tslib_1.__values(this.repository.metadata.fields), _c = _b.next(); !_c.done; _c = _b.next()) {
                var field = _c.value;
                if ((0, relationInfoMember_js_1.getRelationFieldInfo)(field)) {
                    include[field.key] = false;
                }
            }
        }
        catch (e_5_1) { e_5 = { error: e_5_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_5) throw e_5.error; }
        }
        return include;
    };
    DataApi.prototype.getArray = function (response, request, body) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var r, err_5;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (!this.repository.metadata.apiReadAllowed) {
                            response.forbidden();
                            return [2 /*return*/];
                        }
                        _a.label = 1;
                    case 1:
                        _a.trys.push([1, 3, , 4]);
                        return [4 /*yield*/, this.getArrayImpl(request, body)];
                    case 2:
                        r = (_a.sent()).r;
                        response.success(r);
                        return [3 /*break*/, 4];
                    case 3:
                        err_5 = _a.sent();
                        if (err_5.isForbiddenError)
                            response.forbidden(err_5.message);
                        else
                            response.error(err_5, this.repository.metadata);
                        return [3 /*break*/, 4];
                    case 4: return [2 /*return*/];
                }
            });
        });
    };
    DataApi.prototype.liveQuery = function (response, request, body, serializeContext, queryChannel) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var r, data, err_6;
            var _a;
            var _this = this;
            return tslib_1.__generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        if (!this.repository.metadata.apiReadAllowed) {
                            response.forbidden();
                            return [2 /*return*/];
                        }
                        _b.label = 1;
                    case 1:
                        _b.trys.push([1, 5, , 6]);
                        return [4 /*yield*/, this.getArrayImpl(request, body)];
                    case 2:
                        r = _b.sent();
                        _a = {};
                        return [4 /*yield*/, serializeContext()];
                    case 3:
                        data = (_a.requestJson = _b.sent(),
                            _a.findOptionsJson = (0, rest_data_provider_js_1.findOptionsToJson)(r.findOptions, this.repository.metadata),
                            _a.lastIds = r.r.map(function (y) { return _this.repository.metadata.idMetadata.getId(y); }),
                            _a);
                        return [4 /*yield*/, this.remult.liveQueryStorage.add({
                                entityKey: this.repository.metadata.key,
                                id: queryChannel,
                                data: data,
                            })];
                    case 4:
                        _b.sent();
                        response.success(r.r);
                        return [3 /*break*/, 6];
                    case 5:
                        err_6 = _b.sent();
                        if (err_6.isForbiddenError)
                            response.forbidden();
                        else
                            response.error(err_6, this.repository.metadata);
                        return [3 /*break*/, 6];
                    case 6: return [2 /*return*/];
                }
            });
        });
    };
    DataApi.prototype.buildWhere = function (request, body) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var where, _a, _b, f_1;
            var _this = this;
            return tslib_1.__generator(this, function (_c) {
                switch (_c.label) {
                    case 0:
                        where = [];
                        if (!this.repository.metadata.options.apiPrefilter) return [3 /*break*/, 3];
                        if (!(typeof this.repository.metadata.options.apiPrefilter === 'function')) return [3 /*break*/, 2];
                        _b = (_a = where).push;
                        return [4 /*yield*/, this.repository.metadata.options.apiPrefilter()];
                    case 1:
                        _b.apply(_a, [_c.sent()]);
                        return [3 /*break*/, 3];
                    case 2:
                        where.push(this.repository.metadata.options.apiPrefilter);
                        _c.label = 3;
                    case 3:
                        if (!request) return [3 /*break*/, 6];
                        f_1 = (0, filter_interfaces_js_1.buildFilterFromRequestParameters)(this.repository.metadata, {
                            get: function (key) {
                                var _a;
                                var result = (_a = body === null || body === void 0 ? void 0 : body.where) === null || _a === void 0 ? void 0 : _a[key];
                                if (result !== undefined)
                                    return result;
                                result = request.get(key);
                                if (key.startsWith(filter_interfaces_js_1.customUrlToken) &&
                                    result &&
                                    typeof result === 'string')
                                    return JSON.parse(result);
                                return result;
                            },
                        });
                        if (!this.repository.metadata.options.apiPreprocessFilter) return [3 /*break*/, 5];
                        return [4 /*yield*/, this.repository.metadata.options.apiPreprocessFilter(f_1, {
                                metadata: this.repository.metadata,
                                getFilterPreciseValues: function (filter) { return tslib_1.__awaiter(_this, void 0, void 0, function () {
                                    return tslib_1.__generator(this, function (_a) {
                                        return [2 /*return*/, filter_interfaces_js_1.Filter.getPreciseValues(this.repository.metadata, filter || f_1)];
                                    });
                                }); },
                            })];
                    case 4:
                        f_1 = _c.sent();
                        _c.label = 5;
                    case 5:
                        where.push(f_1);
                        _c.label = 6;
                    case 6: return [2 /*return*/, { $and: where }];
                }
            });
        });
    };
    DataApi.prototype.doOnId = function (response, id, what) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var where, _a, _b, err_7;
            var _this = this;
            return tslib_1.__generator(this, function (_c) {
                switch (_c.label) {
                    case 0:
                        _c.trys.push([0, 5, , 6]);
                        where = [
                            this.repository.metadata.idMetadata.getIdFilter(id),
                        ];
                        if (!this.repository.metadata.options.apiPrefilter) return [3 /*break*/, 3];
                        if (!(typeof this.repository.metadata.options.apiPrefilter === 'function')) return [3 /*break*/, 2];
                        _b = (_a = where).push;
                        return [4 /*yield*/, this.repository.metadata.options.apiPrefilter()];
                    case 1:
                        _b.apply(_a, [_c.sent()]);
                        return [3 /*break*/, 3];
                    case 2:
                        where.push(this.repository.metadata.options.apiPrefilter);
                        _c.label = 3;
                    case 3: return [4 /*yield*/, this.repository
                            .find({
                            where: { $and: where },
                            include: this.includeNone(),
                        })
                            .then(function (r) { return tslib_1.__awaiter(_this, void 0, void 0, function () {
                            return tslib_1.__generator(this, function (_a) {
                                switch (_a.label) {
                                    case 0:
                                        if (!(r.length == 0)) return [3 /*break*/, 1];
                                        response.notFound();
                                        return [3 /*break*/, 4];
                                    case 1:
                                        if (!(r.length > 1)) return [3 /*break*/, 2];
                                        response.error({
                                            message: "id \"".concat(id, "\" is not unique for entity ") +
                                                this.repository.metadata.key,
                                        }, this.repository.metadata, 400);
                                        return [3 /*break*/, 4];
                                    case 2: return [4 /*yield*/, what(r[0])];
                                    case 3:
                                        _a.sent();
                                        _a.label = 4;
                                    case 4: return [2 /*return*/];
                                }
                            });
                        }); })];
                    case 4:
                        _c.sent();
                        return [3 /*break*/, 6];
                    case 5:
                        err_7 = _c.sent();
                        response.error(err_7, this.repository.metadata);
                        return [3 /*break*/, 6];
                    case 6: return [2 /*return*/];
                }
            });
        });
    };
    DataApi.prototype.updateManyThroughPutRequest = function (response, request, body) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var action;
            return tslib_1.__generator(this, function (_a) {
                action = request === null || request === void 0 ? void 0 : request.get('__action');
                if (action == 'emptyId') {
                    return [2 /*return*/, this.put(response, '', body)];
                }
                return [2 /*return*/, this.updateManyImplementation(response, request, {
                        where: undefined,
                        set: body,
                    })];
            });
        });
    };
    DataApi.prototype.updateManyImplementation = function (response, request, body) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var where_2, err_8;
            var _this = this;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        _a.trys.push([0, 3, , 4]);
                        return [4 /*yield*/, this.buildWhere(request, body)];
                    case 1:
                        where_2 = _a.sent();
                        filter_interfaces_js_1.Filter.throwErrorIfFilterIsEmpty(where_2, 'updateMany');
                        return [4 /*yield*/, (0, context_js_1.doTransaction)(this.remult, function () { return tslib_1.__awaiter(_this, void 0, void 0, function () {
                                var updated, _a, _b, _c, x, e_6_1;
                                var _d, e_6, _e, _f;
                                return tslib_1.__generator(this, function (_g) {
                                    switch (_g.label) {
                                        case 0:
                                            updated = 0;
                                            _g.label = 1;
                                        case 1:
                                            _g.trys.push([1, 7, 8, 13]);
                                            _a = true, _b = tslib_1.__asyncValues(this.repository.query({
                                                where: where_2,
                                                include: this.includeNone(),
                                                aggregate: undefined,
                                            }));
                                            _g.label = 2;
                                        case 2: return [4 /*yield*/, _b.next()];
                                        case 3:
                                            if (!(_c = _g.sent(), _d = _c.done, !_d)) return [3 /*break*/, 6];
                                            _f = _c.value;
                                            _a = false;
                                            x = _f;
                                            return [4 /*yield*/, this.actualUpdate(x, body.set)];
                                        case 4:
                                            _g.sent();
                                            updated++;
                                            _g.label = 5;
                                        case 5:
                                            _a = true;
                                            return [3 /*break*/, 2];
                                        case 6: return [3 /*break*/, 13];
                                        case 7:
                                            e_6_1 = _g.sent();
                                            e_6 = { error: e_6_1 };
                                            return [3 /*break*/, 13];
                                        case 8:
                                            _g.trys.push([8, , 11, 12]);
                                            if (!(!_a && !_d && (_e = _b.return))) return [3 /*break*/, 10];
                                            return [4 /*yield*/, _e.call(_b)];
                                        case 9:
                                            _g.sent();
                                            _g.label = 10;
                                        case 10: return [3 /*break*/, 12];
                                        case 11:
                                            if (e_6) throw e_6.error;
                                            return [7 /*endfinally*/];
                                        case 12: return [7 /*endfinally*/];
                                        case 13:
                                            response.success({ updated: updated });
                                            return [2 /*return*/];
                                    }
                                });
                            }); })];
                    case 2: return [2 /*return*/, _a.sent()];
                    case 3:
                        err_8 = _a.sent();
                        response.error(err_8, this.repository.metadata);
                        return [3 /*break*/, 4];
                    case 4: return [2 /*return*/];
                }
            });
        });
    };
    DataApi.prototype.actualUpdate = function (row, body) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var ref;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        ref = this.repository.getEntityRef(row);
                        return [4 /*yield*/, ref._updateEntityBasedOnApi(body)];
                    case 1:
                        _a.sent();
                        if (!ref.apiUpdateAllowed) {
                            throw new server_action_js_1.ForbiddenError();
                        }
                        return [4 /*yield*/, ref.save()];
                    case 2:
                        _a.sent();
                        return [2 /*return*/, ref];
                }
            });
        });
    };
    DataApi.prototype.put = function (response, id, body) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var _this = this;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.doOnId(response, id, function (row) { return tslib_1.__awaiter(_this, void 0, void 0, function () {
                            var ref;
                            return tslib_1.__generator(this, function (_a) {
                                switch (_a.label) {
                                    case 0: return [4 /*yield*/, this.actualUpdate(row, body)];
                                    case 1:
                                        ref = _a.sent();
                                        response.success(ref.toApiJson());
                                        return [2 /*return*/];
                                }
                            });
                        }); })];
                    case 1:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    DataApi.prototype.actualDelete = function (row) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (!this.repository.getEntityRef(row).apiDeleteAllowed) {
                            throw new server_action_js_1.ForbiddenError();
                        }
                        return [4 /*yield*/, this.repository.getEntityRef(row).delete()];
                    case 1:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    DataApi.prototype.delete = function (response, id) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var _this = this;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.doOnId(response, id, function (row) { return tslib_1.__awaiter(_this, void 0, void 0, function () {
                            return tslib_1.__generator(this, function (_a) {
                                switch (_a.label) {
                                    case 0: return [4 /*yield*/, this.actualDelete(row)];
                                    case 1:
                                        _a.sent();
                                        response.deleted();
                                        return [2 /*return*/];
                                }
                            });
                        }); })];
                    case 1:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    DataApi.prototype.post = function (body) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var insert, result_1;
            var _this = this;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        insert = function (what) { return tslib_1.__awaiter(_this, void 0, void 0, function () {
                            var newr;
                            return tslib_1.__generator(this, function (_a) {
                                switch (_a.label) {
                                    case 0:
                                        newr = this.repository.create();
                                        return [4 /*yield*/, this.repository.getEntityRef(newr)._updateEntityBasedOnApi(what)];
                                    case 1:
                                        _a.sent();
                                        if (!this.repository.getEntityRef(newr).apiInsertAllowed) {
                                            throw new server_action_js_1.ForbiddenError();
                                        }
                                        return [4 /*yield*/, this.repository.getEntityRef(newr).save()];
                                    case 2:
                                        _a.sent();
                                        return [2 /*return*/, this.repository.getEntityRef(newr).toApiJson()];
                                }
                            });
                        }); };
                        if (!Array.isArray(body)) return [3 /*break*/, 2];
                        result_1 = [];
                        return [4 /*yield*/, (0, context_js_1.doTransaction)(this.remult, function () { return tslib_1.__awaiter(_this, void 0, void 0, function () {
                                var body_2, body_2_1, item, _a, _b, e_7_1;
                                var e_7, _c;
                                return tslib_1.__generator(this, function (_d) {
                                    switch (_d.label) {
                                        case 0:
                                            _d.trys.push([0, 5, 6, 7]);
                                            body_2 = tslib_1.__values(body), body_2_1 = body_2.next();
                                            _d.label = 1;
                                        case 1:
                                            if (!!body_2_1.done) return [3 /*break*/, 4];
                                            item = body_2_1.value;
                                            _b = (_a = result_1).push;
                                            return [4 /*yield*/, insert(item)];
                                        case 2:
                                            _b.apply(_a, [_d.sent()]);
                                            _d.label = 3;
                                        case 3:
                                            body_2_1 = body_2.next();
                                            return [3 /*break*/, 1];
                                        case 4: return [3 /*break*/, 7];
                                        case 5:
                                            e_7_1 = _d.sent();
                                            e_7 = { error: e_7_1 };
                                            return [3 /*break*/, 7];
                                        case 6:
                                            try {
                                                if (body_2_1 && !body_2_1.done && (_c = body_2.return)) _c.call(body_2);
                                            }
                                            finally { if (e_7) throw e_7.error; }
                                            return [7 /*endfinally*/];
                                        case 7: return [2 /*return*/];
                                    }
                                });
                            }); })];
                    case 1:
                        _a.sent();
                        return [2 /*return*/, result_1];
                    case 2: return [4 /*yield*/, insert(body)];
                    case 3: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    DataApi.defaultGetLimit = 0;
    return DataApi;
}());
exports.DataApi = DataApi;
function determineSort(sortUrlParm, dirUrlParam) {
    var dirItems = [];
    if (dirUrlParam)
        dirItems = dirUrlParam.split(',');
    var result = {};
    sortUrlParm.split(',').map(function (name, i) {
        var key = name.trim();
        if (i < dirItems.length && dirItems[i].toLowerCase().trim().startsWith('d'))
            return (result[key] = 'desc');
        else
            return (result[key] = 'asc');
    });
    return result;
}
function serializeError(data) {
    if (data instanceof data_interfaces_js_1.EntityError) {
        data = { message: data.message, modelState: data.modelState };
    }
    else if (data instanceof Error) {
        data = { message: data.message, stack: data.stack };
    }
    var x = JSON.parse(JSON.stringify(data));
    if (!x.message && !x.modelState)
        data = { message: data.message, stack: data.stack };
    if (typeof x === 'string')
        data = { message: x };
    return data;
}
